/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
    repositories {
        // mavenCentral without https:
        maven {
            url 'http://repo1.maven.org/maven2'
        }
        mavenLocal()
        jcenter {
            url 'http://jcenter.bintray.com/'
        }
        maven {
            url 'http://repository.jboss.org/nexus/content/groups/public'
        }
    }
    
    dependencies {
        classpath "de.undercouch:gradle-download-task:2.1.0"
    }   
}

subprojects { subProject ->
    group = 'com.insight.pxf'
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'eclipse'
    apply plugin: 'maven-publish'

    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

    compileJava.options*.compilerArgs = [
            "-g", "-Xlint:varargs", "-Xlint:cast", "-Xlint:classfile", "-Xlint:dep-ann", "-Xlint:divzero", "-Xlint:empty",
            "-Xlint:finally", "-Xlint:overrides", "-Xlint:path", "-Xlint:processing", "-Xlint:static", "-Xlint:try",
            "-Xlint:fallthrough", "-Xlint:deprecation", "-Xlint:unchecked", "-Xlint:-options"
    ]

    compileTestJava.options*.compilerArgs = [
            "-Xlint:varargs", "-Xlint:cast", "-Xlint:classfile", "-Xlint:dep-ann", "-Xlint:divzero", "-Xlint:empty",
            "-Xlint:finally", "-Xlint:overrides", "-Xlint:path", "-Xlint:processing", "-Xlint:static", "-Xlint:try",
            "-Xlint:-fallthrough", "-Xlint:-deprecation", "-Xlint:-unchecked", "-Xlint:-options"
    ]

    repositories {
        // mavenCentral without https:
        maven { url 'http://repo1.maven.org/maven2' }
        mavenLocal()
        maven { url 'http://repo.hortonworks.com/content/repositories/releases/'}
    }

    dependencies {
        //local jar
        compile 'org.apache.hawq:pxf-api:3.0.0'
        compile 'org.apache.hawq:pxf-service:3.0.0'
        compile 'commons-logging:commons-logging:1.1.3'
        compile 'javax.servlet:servlet-api:2.5'
        compile 'org.apache.zookeeper:zookeeper:3.4.6'
        compile 'org.apache.curator:curator-framework:2.9.1'
        compile 'org.apache.curator:curator-recipes:2.9.1'
        compile 'org.apache.curator:curator-client:2.9.1'

        testCompile 'junit:junit:4.11'
        testCompile 'org.powermock:powermock-core:1.5.1'
        testCompile 'org.powermock:powermock-module-junit4:1.5.1'
        testCompile 'org.powermock:powermock-api-mockito:1.5.1'
        testCompile 'org.mockito:mockito-core:1.9.5'
    }
    
    configurations.all {
        resolutionStrategy {
            // force versions that were specified in dependencies:
            force 'org.apache.curator:curator-framework:2.9.1'
            force 'org.apache.curator:curator-recipes:2.9.1'
            force 'org.apache.curator:curator-client:2.9.1'
            force 'commons-codec:commons-codec:1.4'
            force 'org.apache.zookeeper:zookeeper:3.4.6'
            force 'junit:junit:4.11'
        }
    }
}

project('pxf-jdbc') {
    dependencies {
        testCompile "org.apache.hadoop:hadoop-common:$hadoopVersion"
        testCompile "org.apache.hadoop:hadoop-hdfs:$hadoopVersion"
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.11'
}

task jar(type: Copy, dependsOn: [subprojects.assemble]) {
    into 'build'
    subprojects { subProject ->
        from("${project.name}/build/libs") { into '../../hawq-docker/pxf-app/lib' }
    }
}

